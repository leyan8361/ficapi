<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fic.service.mapper.WalletMapper">
  <resultMap id="BaseResultMap" type="com.fic.service.entity.Wallet">
    <id column="wallet_id" jdbcType="INTEGER" property="walletId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="wallet_address" jdbcType="VARCHAR" property="walletAddress" />
    <result column="keystore" jdbcType="VARCHAR" property="keystore" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
  </resultMap>
  <sql id="Base_Column_List">
    wallet_id, user_id, wallet_address, keystore, balance, created_time, created_by, 
    updated_time, updated_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wallet
    where wallet_id = #{walletId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wallet
    where wallet_id = #{walletId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fic.service.entity.Wallet">
    insert into wallet (wallet_id, user_id, wallet_address, 
      keystore, balance, created_time, 
      created_by, updated_time, updated_by
      )
    values (#{walletId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{walletAddress,jdbcType=VARCHAR}, 
      #{keystore,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=INTEGER}, #{updatedTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fic.service.entity.Wallet">
    insert into wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="walletId != null">
        wallet_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="walletAddress != null">
        wallet_address,
      </if>
      <if test="keystore != null">
        keystore,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="walletId != null">
        #{walletId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="walletAddress != null">
        #{walletAddress,jdbcType=VARCHAR},
      </if>
      <if test="keystore != null">
        #{keystore,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fic.service.entity.Wallet">
    update wallet
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="walletAddress != null">
        wallet_address = #{walletAddress,jdbcType=VARCHAR},
      </if>
      <if test="keystore != null">
        keystore = #{keystore,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
    </set>
    where wallet_id = #{walletId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fic.service.entity.Wallet">
    update wallet
    set user_id = #{userId,jdbcType=INTEGER},
      wallet_address = #{walletAddress,jdbcType=VARCHAR},
      keystore = #{keystore,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=INTEGER}
    where wallet_id = #{walletId,jdbcType=INTEGER}
  </update>
</mapper>