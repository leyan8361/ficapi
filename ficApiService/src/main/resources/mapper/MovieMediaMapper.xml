<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fic.service.mapper.MovieMediaMapper">
  <resultMap id="BaseResultMap" type="com.fic.service.entity.MovieMedia">
    <id column="movie_media_id" jdbcType="INTEGER" property="movieMediaId" />
    <result column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
  </resultMap>
  <sql id="Base_Column_List">
    movie_media_id, movie_id, image_url, created_time, created_by, updated_time, updated_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from movie_media
    where movie_media_id = #{movieMediaId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from movie_media
    where movie_media_id = #{movieMediaId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fic.service.entity.MovieMedia">
    insert into movie_media (movie_media_id, movie_id, image_url, 
      created_time, created_by, updated_time, 
      updated_by)
    values (#{movieMediaId,jdbcType=INTEGER}, #{movieId,jdbcType=INTEGER}, #{imageUrl,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fic.service.entity.MovieMedia">
    insert into movie_media
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="movieMediaId != null">
        movie_media_id,
      </if>
      <if test="movieId != null">
        movie_id,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="movieMediaId != null">
        #{movieMediaId,jdbcType=INTEGER},
      </if>
      <if test="movieId != null">
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fic.service.entity.MovieMedia">
    update movie_media
    <set>
      <if test="movieId != null">
        movie_id = #{movieId,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
    </set>
    where movie_media_id = #{movieMediaId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fic.service.entity.MovieMedia">
    update movie_media
    set movie_id = #{movieId,jdbcType=INTEGER},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=INTEGER}
    where movie_media_id = #{movieMediaId,jdbcType=INTEGER}
  </update>
  <select id="findByMovieId" resultMap="BaseResultMap">
    select * from movie_media where movie_id = #{movieId} limit 0,1;
  </select>
</mapper>