<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fic.service.mapper.MovieUserInfoMapper">
  <resultMap id="BaseResultMap" type="com.fic.service.entity.MovieUserInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="likz" jdbcType="TINYINT" property="likz" />
    <result column="fav" jdbcType="TINYINT" property="fav" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="movie_id" jdbcType="INTEGER" property="movieId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, likz, fav, user_id, movie_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from movie_user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from movie_user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fic.service.entity.MovieUserInfo">
    insert into movie_user_info (id, likz, fav, 
      user_id, movie_id)
    values (#{id,jdbcType=INTEGER}, #{likz,jdbcType=TINYINT}, #{fav,jdbcType=TINYINT}, 
      #{userId,jdbcType=INTEGER}, #{movieId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fic.service.entity.MovieUserInfo">
    insert into movie_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="likz != null">
        likz,
      </if>
      <if test="fav != null">
        fav,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="movieId != null">
        movie_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="likz != null">
        #{likz,jdbcType=TINYINT},
      </if>
      <if test="fav != null">
        #{fav,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="movieId != null">
        #{movieId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fic.service.entity.MovieUserInfo">
    update movie_user_info
    <set>
      <if test="likz != null">
        likz = #{likz,jdbcType=TINYINT},
      </if>
      <if test="fav != null">
        fav = #{fav,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="movieId != null">
        movie_id = #{movieId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fic.service.entity.MovieUserInfo">
    update movie_user_info
    set likz = #{likz,jdbcType=TINYINT},
      fav = #{fav,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      movie_id = #{movieId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findByUserIdAndMovieId" resultMap="BaseResultMap">
    select * from movie_user_info where user_id = #{userId} and movie_id = #{movieId}
  </select>
  <select id="countAlike" resultType="int">
    select count(*) from movie_user_info where movie_id = #{movieId} and (likz is not null or likz = 1);
  </select>
  <select id="countCollect" resultType="int">
    select count(*) from movie_user_info where movie_id = #{movieId} and (fav is not null or fav = 1);
  </select>
</mapper>