<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fic.service.mapper.UserAuthMapper">
  <resultMap id="BaseResultMap" type="com.fic.service.entity.UserAuth">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="cer_id" jdbcType="VARCHAR" property="cerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="front_face_url" jdbcType="VARCHAR" property="frontFaceUrl" />
    <result column="back_face_url" jdbcType="VARCHAR" property="backFaceUrl" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, cer_id, name, front_face_url, back_face_url, created_time, status, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_auth
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_auth
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fic.service.entity.UserAuth">
    insert into user_auth (id, user_id, cer_id,
      name, front_face_url, back_face_url,
      created_time, status, remark
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{cerId,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{frontFaceUrl,jdbcType=VARCHAR}, #{backFaceUrl,jdbcType=VARCHAR},
      #{createdTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fic.service.entity.UserAuth">
    insert into user_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="cerId != null">
        cer_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="frontFaceUrl != null">
        front_face_url,
      </if>
      <if test="backFaceUrl != null">
        back_face_url,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="cerId != null">
        #{cerId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="frontFaceUrl != null">
        #{frontFaceUrl,jdbcType=VARCHAR},
      </if>
      <if test="backFaceUrl != null">
        #{backFaceUrl,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fic.service.entity.UserAuth">
    update user_auth
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="cerId != null">
        cer_id = #{cerId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="frontFaceUrl != null">
        front_face_url = #{frontFaceUrl,jdbcType=VARCHAR},
      </if>
      <if test="backFaceUrl != null">
        back_face_url = #{backFaceUrl,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fic.service.entity.UserAuth">
    update user_auth
    set user_id = #{userId,jdbcType=INTEGER},
      cer_id = #{cerId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      front_face_url = #{frontFaceUrl,jdbcType=VARCHAR},
      back_face_url = #{backFaceUrl,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="get" resultMap="BaseResultMap">
    select * from user_auth where id = #{id};
  </select>
  <select id="checkIfExist" resultType="int">
    select count(*) from user_auth where user_id = #{userId};
  </select>
  <select id="findByUserId" resultMap="BaseResultMap">
    select * from user_auth where user_id = #{userId};
  </select>
  <select id="findAllByStatus" resultMap="BaseResultMap">
    select * from user_auth where
    <if test="type == 0">
      1=1
    </if>
    <if test="type == 1">
      status = 0
    </if>
    <if test="type == 2">
      status = 1 or status = 2
    </if>;
  </select>
</mapper>