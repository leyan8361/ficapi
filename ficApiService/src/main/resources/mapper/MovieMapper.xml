<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fic.service.mapper.MovieMapper">
  <resultMap id="BaseResultMap" type="com.fic.service.entity.Movie">
    <id column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="movie_name" jdbcType="VARCHAR" property="movieName" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="movie_type" jdbcType="VARCHAR" property="movieType" />
    <result column="budget" jdbcType="DECIMAL" property="budget" />
    <result column="quota" jdbcType="DECIMAL" property="quota" />
    <result column="movie_cover_url" jdbcType="VARCHAR" property="movieCoverUrl" />
    <result column="show_place" jdbcType="VARCHAR" property="showPlace" />
    <result column="show_time" jdbcType="VARCHAR" property="showTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="duty_description" jdbcType="VARCHAR" property="dutyDescription" />
    <result column="box_info" jdbcType="VARCHAR" property="boxInfo" />
    <result column="invest_cycle" jdbcType="INTEGER" property="investCycle" />
    <result column="invest_count" jdbcType="INTEGER" property="investCount" />
    <result column="movie_last" jdbcType="INTEGER" property="movieLast" />
    <result column="return_rate" jdbcType="DECIMAL" property="returnRate" />
  </resultMap>
  <sql id="Base_Column_List">
    movie_id, movie_name, created_time, updated_time, movie_type, budget, quota, movie_cover_url,
    show_place, show_time, status, duty_description, box_info, invest_cycle, invest_count,
    movie_last, return_rate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from movie
    where movie_id = #{movieId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from movie
    where movie_id = #{movieId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fic.service.entity.Movie">
    insert into movie (movie_id, movie_name, created_time,
      updated_time, movie_type, budget,
      quota, movie_cover_url, show_place,
      show_time, status, duty_description,
      box_info, invest_cycle, invest_count,
      movie_last, return_rate)
    values (#{movieId,jdbcType=INTEGER}, #{movieName,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP},
      #{updatedTime,jdbcType=TIMESTAMP}, #{movieType,jdbcType=VARCHAR}, #{budget,jdbcType=DECIMAL},
      #{quota,jdbcType=DECIMAL}, #{movieCoverUrl,jdbcType=VARCHAR}, #{showPlace,jdbcType=VARCHAR},
      #{showTime,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{dutyDescription,jdbcType=VARCHAR},
      #{boxInfo,jdbcType=VARCHAR}, #{investCycle,jdbcType=INTEGER}, #{investCount,jdbcType=INTEGER},
      #{movieLast,jdbcType=INTEGER}, #{returnRate,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.fic.service.entity.Movie" useGeneratedKeys="true" keyProperty="movieId">
    insert into movie
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="movieId != null">
        movie_id,
      </if>
      <if test="movieName != null">
        movie_name,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="movieType != null">
        movie_type,
      </if>
      <if test="budget != null">
        budget,
      </if>
      <if test="quota != null">
        quota,
      </if>
      <if test="movieCoverUrl != null">
        movie_cover_url,
      </if>
      <if test="showPlace != null">
        show_place,
      </if>
      <if test="showTime != null">
        show_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="dutyDescription != null">
        duty_description,
      </if>
      <if test="boxInfo != null">
        box_info,
      </if>
      <if test="investCycle != null">
        invest_cycle,
      </if>
      <if test="investCount != null">
        invest_count,
      </if>
      <if test="movieLast != null">
        movie_last,
      </if>
      <if test="returnRate != null">
        return_rate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="movieId != null">
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="movieName != null">
        #{movieName,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="movieType != null">
        #{movieType,jdbcType=VARCHAR},
      </if>
      <if test="budget != null">
        #{budget,jdbcType=DECIMAL},
      </if>
      <if test="quota != null">
        #{quota,jdbcType=DECIMAL},
      </if>
      <if test="movieCoverUrl != null">
        #{movieCoverUrl,jdbcType=VARCHAR},
      </if>
      <if test="showPlace != null">
        #{showPlace,jdbcType=VARCHAR},
      </if>
      <if test="showTime != null">
        #{showTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="dutyDescription != null">
        #{dutyDescription,jdbcType=VARCHAR},
      </if>
      <if test="boxInfo != null">
        #{boxInfo,jdbcType=VARCHAR},
      </if>
      <if test="investCycle != null">
        #{investCycle,jdbcType=INTEGER},
      </if>
      <if test="investCount != null">
        #{investCount,jdbcType=INTEGER},
      </if>
      <if test="movieLast != null">
        #{movieLast,jdbcType=INTEGER},
      </if>
      <if test="returnRate != null">
        #{returnRate,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fic.service.entity.Movie">
    update movie
    <set>
      <if test="movieName != null">
        movie_name = #{movieName,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="movieType != null">
        movie_type = #{movieType,jdbcType=VARCHAR},
      </if>
      <if test="budget != null and budget != 0">
        budget = #{budget,jdbcType=DECIMAL},
      </if>
      <if test="quota != null and quota !=0">
        quota = #{quota,jdbcType=DECIMAL},
      </if>
      <if test="movieCoverUrl != null">
        movie_cover_url = #{movieCoverUrl,jdbcType=VARCHAR},
      </if>
      <if test="showPlace != null">
        show_place = #{showPlace,jdbcType=VARCHAR},
      </if>
      <if test="showTime != null">
        show_time = #{showTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="dutyDescription != null">
        duty_description = #{dutyDescription,jdbcType=VARCHAR},
      </if>
      <if test="boxInfo != null">
        box_info = #{boxInfo,jdbcType=VARCHAR},
      </if>
      <if test="investCycle != null">
        invest_cycle = #{investCycle,jdbcType=INTEGER},
      </if>
      <if test="investCount != null">
        invest_count = #{investCount,jdbcType=INTEGER},
      </if>
      <if test="movieLast != null">
        movie_last = #{movieLast,jdbcType=INTEGER},
      </if>
      <if test="returnRate != null">
        return_rate = #{returnRate,jdbcType=DECIMAL},
      </if>
    </set>
    where movie_id = #{movieId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fic.service.entity.Movie">
    update movie
    set movie_name = #{movieName,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      movie_type = #{movieType,jdbcType=VARCHAR},
      budget = #{budget,jdbcType=DECIMAL},
      quota = #{quota,jdbcType=DECIMAL},
      movie_cover_url = #{movieCoverUrl,jdbcType=VARCHAR},
      show_place = #{showPlace,jdbcType=VARCHAR},
      show_time = #{showTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      duty_description = #{dutyDescription,jdbcType=VARCHAR},
      box_info = #{boxInfo,jdbcType=VARCHAR},
      invest_cycle = #{investCycle,jdbcType=INTEGER},
      invest_count = #{investCount,jdbcType=INTEGER},
      movie_last = #{movieLast,jdbcType=INTEGER},
      return_rate = #{returnRate,jdbcType=DECIMAL}
    where movie_id = #{movieId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fic.service.entity.Movie">
    update movie
    set movie_name = #{movieName,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      movie_type = #{movieType,jdbcType=VARCHAR},
      budget = #{budget,jdbcType=DECIMAL},
      quota = #{quota,jdbcType=DECIMAL},
      movie_cover_url = #{movieCoverUrl,jdbcType=VARCHAR},
      show_place = #{showPlace,jdbcType=VARCHAR},
      show_time = #{showTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      duty_description = #{dutyDescription,jdbcType=VARCHAR},
      box_info = #{boxInfo,jdbcType=VARCHAR},
      invest_cycle = #{investCycle,jdbcType=INTEGER},
      invest_count = #{investCount,jdbcType=INTEGER},
      movie_last = #{movieLast,jdbcType=INTEGER},
      return_rate = #{returnRate,jdbcType=DECIMAL}
    where movie_id = #{movieId,jdbcType=INTEGER}
  </update>
  <select id="findAll" resultMap="BaseResultMap">
    select * from movie where 1=1;
  </select>
  <select id="findAllByPageDividend" resultMap="BaseResultMap">
    select * from movie where status = 2 or status = 3 limit #{offset},10;
  </select>
  <select id="findAllByPage" resultMap="BaseResultMap">
    select * from movie where status = 0 or status = 1 limit #{offset},10;
  </select>
  <select id="checkIfExistById" resultType="int">
    select movie_id from movie where movie_id = #{movidId};
  </select>
  <update id="updateMovieCover">
    update movie set movie_cover_url = #{movieCoverUrl} where movie_id = #{movieId};
  </update>
  <update id="updateStatus">
    update movie set status = #{status,jdbcType=TINYINT} where movie_id = #{movieId}
  </update>
  <select id="checkIfExistByName" resultType="int">
    select count(*) from movie where movie_name = #{movieName};
  </select>
  <update id="updateActorInfo">
    update movie set actor_list = #{actorInfoStr} where id = #{movieId}
  </update>
</mapper>