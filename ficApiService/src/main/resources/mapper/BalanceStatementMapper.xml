<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fic.service.mapper.BalanceStatementMapper">
  <resultMap id="BaseResultMap" type="com.fic.service.entity.BalanceStatement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="way" jdbcType="TINYINT" property="way" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="distribution_id" jdbcType="INTEGER" property="distributionId" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="invest_detail_id" jdbcType="INTEGER" property="investDetailId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, amount, type, way, created_time, distribution_id, balance, invest_detail_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from balance_statement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from balance_statement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fic.service.entity.BalanceStatement">
    insert into balance_statement (id, user_id, amount, 
      type, way, created_time, 
      distribution_id, balance, invest_detail_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, 
      #{type,jdbcType=TINYINT}, #{way,jdbcType=TINYINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{distributionId,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL}, #{investDetailId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fic.service.entity.BalanceStatement">
    insert into balance_statement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="way != null">
        way,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="distributionId != null">
        distribution_id,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="investDetailId != null">
        invest_detail_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="way != null">
        #{way,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="distributionId != null">
        #{distributionId,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="investDetailId != null">
        #{investDetailId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fic.service.entity.BalanceStatement">
    update balance_statement
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="way != null">
        way = #{way,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="distributionId != null">
        distribution_id = #{distributionId,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="investDetailId != null">
        invest_detail_id = #{investDetailId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fic.service.entity.BalanceStatement">
    update balance_statement
    set user_id = #{userId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      type = #{type,jdbcType=TINYINT},
      way = #{way,jdbcType=TINYINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      distribution_id = #{distributionId,jdbcType=INTEGER},
      balance = #{balance,jdbcType=DECIMAL},
      invest_detail_id = #{investDetailId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAllByUserId" resultMap="BaseResultMap">
    select * from balance_statement where user_id = #{userId}
  </select>
  <select id="sumContinueReward" resultType="java.math.BigDecimal">
    select sum(b.amount) from balance_statement b where b.created_time BETWEEN #{startDay} and #{endDay} and b.user_id = #{userId} and b.type = 9;
  </select>
</mapper>