<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fic.service.mapper.InvestMapper">
  <resultMap id="BaseResultMap" type="com.fic.service.entity.Invest">
    <id column="invest_id" jdbcType="INTEGER" property="investId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="qty" jdbcType="TINYINT" property="qty" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
    <result column="reward_balance" jdbcType="DECIMAL" property="rewardBalance" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="lock_balance" jdbcType="DECIMAL" property="lockBalance" />
  </resultMap>
  <sql id="Base_Column_List">
    invest_id, user_id, balance, qty, created_time, created_by, updated_time, updated_by,
    reward_balance, status, lock_balance
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from invest
    where invest_id = #{investId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from invest
    where invest_id = #{investId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fic.service.entity.Invest">
    insert into invest (invest_id, user_id, balance,
      qty, created_time, created_by,
      updated_time, updated_by, reward_balance,
      status, lock_balance)
    values (#{investId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL},
      #{qty,jdbcType=TINYINT}, #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=INTEGER},
      #{updatedTime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=INTEGER}, #{rewardBalance,jdbcType=DECIMAL},
      #{status,jdbcType=TINYINT}, #{lockBalance,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.fic.service.entity.Invest">
    insert into invest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="investId != null">
        invest_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="qty != null">
        qty,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="rewardBalance != null">
        reward_balance,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="lockBalance != null">
        lock_balance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="investId != null">
        #{investId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="qty != null">
        #{qty,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="rewardBalance != null">
        #{rewardBalance,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="lockBalance != null">
        #{lockBalance,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fic.service.entity.Invest">
    update invest
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="qty != null">
        qty = #{qty,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="rewardBalance != null">
        reward_balance = #{rewardBalance,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="lockBalance != null">
        lock_balance = #{lockBalance,jdbcType=DECIMAL},
      </if>
    </set>
    where invest_id = #{investId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fic.service.entity.Invest">
    update invest
    set user_id = #{userId,jdbcType=INTEGER},
      balance = #{balance,jdbcType=DECIMAL},
      qty = #{qty,jdbcType=TINYINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=INTEGER},
      reward_balance = #{rewardBalance,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      lock_balance = #{lockBalance,jdbcType=DECIMAL}
    where invest_id = #{investId,jdbcType=INTEGER}
  </update>
  <select id="findByUserId" resultMap="BaseResultMap">
    select * from invest where user_id= #{userId};
  </select>
  <update id="updateBalance">
    update invest set balance = #{balance} where user_id = #{userId}
  </update>
  <update id="updateRewardBalance">
    update invest set reward_balance = #{balance} where user_id = #{userId}
  </update>
  <update id="updateLockBalance">
    update invest set balance = #{balance},lock_balance = #{lockBalance} where user_id = #{userId}
  </update>
  <update id="updateBalanceAndRewardBalance">
    update invest set balance = #{balance},reward_balance = #{rewardBalance} where user_id = #{userId}
  </update>
</mapper>