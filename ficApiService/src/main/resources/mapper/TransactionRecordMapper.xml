<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fic.service.mapper.TransactionRecordMapper">
  <resultMap id="BaseResultMap" type="com.fic.service.entity.TransactionRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="from_address" jdbcType="VARCHAR" property="fromAddress" />
    <result column="to_address" jdbcType="VARCHAR" property="toAddress" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="gas_price" jdbcType="DECIMAL" property="gasPrice" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="transaction_address" jdbcType="VARCHAR" property="transactionAddress" />
    <result column="gas_limit" jdbcType="DECIMAL" property="gasLimit" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="way" jdbcType="INTEGER" property="way" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, from_address, to_address, amount, gas_price, fee, transaction_address,
    gas_limit, status, remark, way, created_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from transaction_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from transaction_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fic.service.entity.TransactionRecord">
    insert into transaction_record (id, user_id, from_address,
      to_address, amount, gas_price,
      fee, transaction_address, gas_limit,
      status, remark, way,
      created_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{fromAddress,jdbcType=VARCHAR},
      #{toAddress,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{gasPrice,jdbcType=DECIMAL},
      #{fee,jdbcType=DECIMAL}, #{transactionAddress,jdbcType=VARCHAR}, #{gasLimit,jdbcType=DECIMAL},
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{way,jdbcType=INTEGER},
      #{createdTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fic.service.entity.TransactionRecord">
    insert into transaction_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fromAddress != null">
        from_address,
      </if>
      <if test="toAddress != null">
        to_address,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="gasPrice != null">
        gas_price,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="transactionAddress != null">
        transaction_address,
      </if>
      <if test="gasLimit != null">
        gas_limit,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="way != null">
        way,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="fromAddress != null">
        #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null">
        #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="gasPrice != null">
        #{gasPrice,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="transactionAddress != null">
        #{transactionAddress,jdbcType=VARCHAR},
      </if>
      <if test="gasLimit != null">
        #{gasLimit,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="way != null">
        #{way,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fic.service.entity.TransactionRecord">
    update transaction_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="fromAddress != null">
        from_address = #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null">
        to_address = #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="gasPrice != null">
        gas_price = #{gasPrice,jdbcType=DECIMAL},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="transactionAddress != null">
        transaction_address = #{transactionAddress,jdbcType=VARCHAR},
      </if>
      <if test="gasLimit != null">
        gas_limit = #{gasLimit,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="way != null">
        way = #{way,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fic.service.entity.TransactionRecord">
    update transaction_record
    set user_id = #{userId,jdbcType=INTEGER},
      from_address = #{fromAddress,jdbcType=VARCHAR},
      to_address = #{toAddress,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      gas_price = #{gasPrice,jdbcType=DECIMAL},
      fee = #{fee,jdbcType=DECIMAL},
      transaction_address = #{transactionAddress,jdbcType=VARCHAR},
      gas_limit = #{gasLimit,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      way = #{way,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAllByType" parameterType="int">
    select * from transaction_record where
    <if test="type = 0">
      1=1
    </if>
    <if test="type = 1">
      way = 0
    </if>
    <if test="type = 2">
      way = 1
    </if>;
  </select>
  <update id="updateStatus">
    update transaction_record set status = #{status}
    <if test="remark != null">
      and remark = #{remark}
    </if>
    where id = #{id}
  </update>
</mapper>